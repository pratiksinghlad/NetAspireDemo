services:
  weatherapi:
    build:
      context: .
      dockerfile: src/WeatherApi/Dockerfile
    container_name: weatherapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "5001:8080"
    networks:
      - weather-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  weatherweb:
    build:
      context: .
      dockerfile: src/WeatherWeb/Dockerfile
    container_name: weatherweb
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - WEATHER_API_BASE_URL=http://weatherapi:8080
    ports:
      - "5000:8080"
    depends_on:
      weatherapi:
        condition: service_healthy
    networks:
      - weather-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  weather-network:
    driver: bridge

# For development, you can override settings with docker-compose.override.yml
# Example override file content:
# services:
#   weatherapi:
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Development
#   weatherweb:
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Development